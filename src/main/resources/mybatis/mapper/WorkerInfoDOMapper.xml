<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.manager.hotel.mapper.WorkerInfoDOMapper" >
  <resultMap id="BaseResultMap" type="com.manager.hotel.model.WorkerInfoDO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="worker_name" property="workerName" jdbcType="VARCHAR" />
    <result column="word_password" property="wordPassword" jdbcType="VARCHAR" />
    <result column="department_id" property="departmentId" jdbcType="INTEGER" />
    <result column="role_type" property="roleType" jdbcType="INTEGER" />
    <result column="worker_sex" property="workerSex" jdbcType="INTEGER" />
    <result column="worker_id_number" property="workerIdNumber" jdbcType="VARCHAR" />
    <result column="worker_position" property="workerPosition" jdbcType="VARCHAR" />
    <result column="work_wage" property="workWage" jdbcType="DOUBLE" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, worker_name, word_password, department_id, role_type, worker_sex, worker_id_number, 
    worker_position, work_wage, gmt_create, gmt_modified
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from worker_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from worker_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.manager.hotel.model.WorkerInfoDO" >
    insert into worker_info (id, worker_name, word_password, 
      department_id, role_type, worker_sex, 
      worker_id_number, worker_position, work_wage, 
      gmt_create, gmt_modified)
    values (#{id,jdbcType=INTEGER}, #{workerName,jdbcType=VARCHAR}, #{wordPassword,jdbcType=VARCHAR}, 
      #{departmentId,jdbcType=INTEGER}, #{roleType,jdbcType=INTEGER}, #{workerSex,jdbcType=INTEGER}, 
      #{workerIdNumber,jdbcType=VARCHAR}, #{workerPosition,jdbcType=VARCHAR}, #{workWage,jdbcType=DOUBLE}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.manager.hotel.model.WorkerInfoDO" >
    insert into worker_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="workerName != null" >
        worker_name,
      </if>
      <if test="wordPassword != null" >
        word_password,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="roleType != null" >
        role_type,
      </if>
      <if test="workerSex != null" >
        worker_sex,
      </if>
      <if test="workerIdNumber != null" >
        worker_id_number,
      </if>
      <if test="workerPosition != null" >
        worker_position,
      </if>
      <if test="workWage != null" >
        work_wage,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="workerName != null" >
        #{workerName,jdbcType=VARCHAR},
      </if>
      <if test="wordPassword != null" >
        #{wordPassword,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="roleType != null" >
        #{roleType,jdbcType=INTEGER},
      </if>
      <if test="workerSex != null" >
        #{workerSex,jdbcType=INTEGER},
      </if>
      <if test="workerIdNumber != null" >
        #{workerIdNumber,jdbcType=VARCHAR},
      </if>
      <if test="workerPosition != null" >
        #{workerPosition,jdbcType=VARCHAR},
      </if>
      <if test="workWage != null" >
        #{workWage,jdbcType=DOUBLE},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.manager.hotel.model.WorkerInfoDO" >
    update worker_info
    <set >
      <if test="workerName != null" >
        worker_name = #{workerName,jdbcType=VARCHAR},
      </if>
      <if test="wordPassword != null" >
        word_password = #{wordPassword,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="roleType != null" >
        role_type = #{roleType,jdbcType=INTEGER},
      </if>
      <if test="workerSex != null" >
        worker_sex = #{workerSex,jdbcType=INTEGER},
      </if>
      <if test="workerIdNumber != null" >
        worker_id_number = #{workerIdNumber,jdbcType=VARCHAR},
      </if>
      <if test="workerPosition != null" >
        worker_position = #{workerPosition,jdbcType=VARCHAR},
      </if>
      <if test="workWage != null" >
        work_wage = #{workWage,jdbcType=DOUBLE},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.manager.hotel.model.WorkerInfoDO" >
    update worker_info
    set worker_name = #{workerName,jdbcType=VARCHAR},
      word_password = #{wordPassword,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      role_type = #{roleType,jdbcType=INTEGER},
      worker_sex = #{workerSex,jdbcType=INTEGER},
      worker_id_number = #{workerIdNumber,jdbcType=VARCHAR},
      worker_position = #{workerPosition,jdbcType=VARCHAR},
      work_wage = #{workWage,jdbcType=DOUBLE},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>